name: Test and Publish Docker Image

on:
  push:
    branches:
      - 'main'
      - '*'

jobs:
  build_1:
    name: Build 1
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.hash_output.outputs.sha_hash }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t rust-builder .

      - name: Run tests in Docker container
        run: docker run --name rust-builder-container -v ${{ github.workspace }}/reproducible-test:/host rust-builder /bin/bash /host/test.sh

      - name: Calculate SHA hash of build output
        id: hash_output
        run: |
          docker cp rust-builder-container:/host/target/near/. /tmp/output1
          wasm_file=$(ls /tmp/output1/*.wasm | head -n 1)
          if [ -z "$wasm_file" ]; then
            echo "No WASM file found."
            exit 1
          fi
          sha_hash=$(sha256sum "$wasm_file" | awk '{ print $1 }')
          echo "::set-output name=sha_hash::$sha_hash"

  build_2:
    name: Build 2
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.hash_output.outputs.sha_hash }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t rust-builder .

      - name: Run tests in Docker container
        run: docker run --name rust-builder-container -v ${{ github.workspace }}/reproducible-test:/host rust-builder /bin/bash /host/test.sh

      - name: Calculate SHA hash of build output
        id: hash_output
        run: |
          docker cp rust-builder-container:/host/target/near/. /tmp/output1
          wasm_file=$(ls /tmp/output1/*.wasm | head -n 1)
          if [ -z "$wasm_file" ]; then
            echo "No WASM file found."
            exit 1
          fi
          sha_hash=$(sha256sum "$wasm_file" | awk '{ print $1 }')
          echo "::set-output name=sha_hash::$sha_hash"


  compare_outputs:
    name: Compare WASM files
    runs-on: ubuntu-latest
    needs: [build_1, build_2]
    steps:
      - name: Compare SHA hashes
        run: |
          if [ "${{ needs.build_1.outputs.hash }}" == "${{ needs.build_2.outputs.hash }}" ]; then
            echo "Builds are reproducible."
          else
            echo "Builds differ."
            exit 1
          fi

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: [compare_outputs]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract branch name
        id: branch_name
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ secrets.DOCKER_HUB_REPO }}
          tags: |
            type=raw,value=${{ steps.branch_name.outputs.branch }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}